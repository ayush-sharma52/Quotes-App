{"version":3,"sources":["components/layout/MainNavigation.module.css","lib/api.js","hooks/use-http.js","components/UI/LoadingSpinner.js","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","pages/NoQuote.js","components/UI/LoadingSpinner.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","data","ok","Error","message","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","requestData","commentData","name","getAllComments","transformedComments","commentObj","text","httpReducer","state","action","type","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","LoadingSpinner","className","classes","spinner","NotFound","QuoteItem","props","item","author","to","QuoteList","location","useLocation","history","useHistory","console","log","quotes","ascending","isAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","onClick","pathname","list","map","quote","AllQuotes","useState","setQuotes","useEffect","length","NoQuote","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","children","AddQuote","React","lazy","QuoteDetail","App","fallback","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6BAA6B,IAAM,4BAA4B,OAAS,+B,sOCDnIC,EAAkB,wDAEjB,SAAeC,IAAtB,+B,sDAAO,sHACkBC,MAAM,GAAD,OAAIF,EAAJ,iBADvB,cACCG,EADD,gBAEcA,EAASC,OAFvB,UAECC,EAFD,OAIAF,EAASG,GAJT,sBAKG,IAAIC,MAAMF,EAAKG,SAAW,2BAL7B,OAUL,IAAWC,KAFLC,EAAoB,GAERL,EACVM,EADgB,aAEpBC,GAAIH,GACDJ,EAAKI,IAGVC,EAAkBG,KAAKF,GAhBpB,yBAmBED,GAnBF,6C,sBAsBA,SAAeI,EAAtB,kC,sDAAO,WAA8BC,GAA9B,qGACkBb,MAAM,GAAD,OAAIF,EAAJ,mBAA8Be,EAA9B,UADvB,cACCZ,EADD,gBAEcA,EAASC,OAFvB,UAECC,EAFD,OAIAF,EAASG,GAJT,sBAKG,IAAIC,MAAMF,EAAKG,SAAW,0BAL7B,cAQCQ,EARD,aASHJ,GAAIG,GACDV,GAVA,kBAaEW,GAbF,6C,sBAgBA,SAAeC,EAAtB,kC,sDAAO,WAAwBC,GAAxB,mGACkBhB,MAAM,GAAD,OAAIF,EAAJ,gBAAmC,CAC7DmB,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,sBALf,cACCpB,EADD,gBAQcA,EAASC,OARvB,UAQCC,EARD,OAUAF,EAASG,GAVT,sBAWG,IAAIC,MAAMF,EAAKG,SAAW,2BAX7B,gCAcE,MAdF,4C,sBAiBA,SAAegB,EAAtB,kC,sDAAO,WAA0BC,GAA1B,mGACkBvB,MAAM,GAAD,OAAIF,EAAJ,qBAAgCyB,EAAYV,QAA5C,SAA4D,CACtFI,OAAQ,OACRC,KAAMC,KAAKC,UAAUG,EAAYC,aACjCH,QAAS,CACP,eAAgB,sBALf,cACCpB,EADD,gBAQcA,EAASC,OARvB,UAQCC,EARD,OAUAF,EAASG,GAVT,sBAWG,IAAIC,MAAMF,EAAKG,SAAW,0BAX7B,gCAcEH,EAAKsB,MAdP,4C,sBAiBA,SAAeC,EAAtB,kC,sDAAO,WAA8Bb,GAA9B,yGACkBb,MAAM,GAAD,OAAIF,EAAJ,qBAAgCe,EAAhC,UADvB,cACCZ,EADD,gBAGcA,EAASC,OAHvB,UAGCC,EAHD,OAKAF,EAASG,GALT,sBAMG,IAAIC,MAAMF,EAAKG,SAAW,2BAN7B,OAWL,IAAWC,KAFLoB,EAAsB,GAEVxB,EACVyB,EAAa,CACjBlB,GAAIH,EACJsB,KAAK1B,EAAKI,IAGZoB,EAAoBhB,KAAKiB,GAjBtB,yBAoBED,GApBF,6C,iGCxEP,SAASG,EAAYC,EAAOC,GAC1B,MAAoB,SAAhBA,EAAOC,KACF,CACL9B,KAAM,KACN+B,MAAO,KACPC,OAAQ,WAIQ,YAAhBH,EAAOC,KACF,CACL9B,KAAM6B,EAAOI,aACbF,MAAO,KACPC,OAAQ,aAIQ,UAAhBH,EAAOC,KACF,CACL9B,KAAM,KACN+B,MAAOF,EAAOK,aACdF,OAAQ,aAILJ,CACR,CAgCcO,IA9Bf,SAAiBC,GAA4C,IAA3BC,EAA0B,wDAC1D,EAA8BC,qBAAWX,EAAa,CACpDK,OAAQK,EAAmB,UAAY,KACvCrC,KAAM,KACN+B,MAAO,OAHT,mBAAOQ,EAAP,KAAkBC,EAAlB,KAMMC,EAAcC,sBAAW,iDAC7B,WAAgBtB,GAAhB,wFACEoB,EAAS,CAAEV,KAAM,SADnB,kBAI8BM,EAAgBhB,GAJ9C,OAIUa,EAJV,OAKIO,EAAS,CAAEV,KAAM,UAAWG,iBALhC,gDAOIO,EAAS,CACPV,KAAM,QACNI,aAAc,KAAM/B,SAAW,0BATrC,yDAD6B,sDAc7B,CAACiC,IAGH,OAAO,aACLK,eACGF,EAEN,C,kCC1DD,4BAMeI,IAJQ,WACrB,OAAO,qBAAKC,UAAWC,IAAQC,SAChC,C,qBCHDrD,EAAOC,QAAU,CAAC,KAAO,wB,qBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2B,oDCO1CqD,UARA,WACb,OACE,qBAAKH,UAAU,WAAf,SACE,kDAGL,C,qBCLHnD,EAAOC,QAAU,CAAC,QAAU,gC,qBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,yJCgBVsD,EAdG,SAACC,GACjB,OACE,qBAAIL,UAAWC,IAAQK,KAAvB,UACE,mCACE,qCACE,4BAAID,EAAMvB,SAEZ,qCAAauB,EAAME,YAErB,cAAC,IAAD,CAASC,GAAE,kBAAaH,EAAM1C,IAA9B,+BAGL,E,iBC2Cc8C,EA1CG,SAACJ,GAEjB,IAAMK,EAAWC,cACXC,EAAUC,cAChBC,QAAQC,IAAIV,EAAMW,QAElB,IAjBkBA,EAAQC,EAqBpBC,EAA0C,QAJ5B,IAAIC,gBAAgBT,EAASU,QAIjBC,IAAI,QAEhCC,GAvBcN,EAuBYX,EAAMW,OAvBVC,EAuBkBC,EAtBrCF,EAAOO,MAAK,SAACC,EAAQC,GAC1B,OAAIR,EACKO,EAAO7D,GAAK8D,EAAO9D,GAAK,GAAK,EAE7B6D,EAAO7D,GAAK8D,EAAO9D,GAAK,GAAK,CAEvC,KA2BD,OACE,eAAC,WAAD,WACE,yBAAQ+D,QAXW,WACrBd,EAAQhD,KAAR,UAAgB8C,EAASiB,SAAzB,iBAA0CT,EAAc,OAAS,OAMlE,EAIoClB,UAAU,YAA3C,kBACQkB,EAAc,aAAe,eAErC,oBAAIlB,UAAWC,IAAQ2B,KAAvB,SACGN,EAAaO,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEnE,GAAImE,EAAMnE,GACV4C,OAAQuB,EAAMvB,OACdzB,KAAMgD,EAAMhD,MAHPgD,EAAMnE,GAFG,QAWzB,E,gCCnBcoE,MA9Bf,WACE,MAA6CxC,YAAQvC,KAAc,GAA3D6C,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAQD,EAA7B,EAA6BA,MAAO/B,EAApC,EAAoCA,KACpC,EAA4B4E,mBAAS,IAArC,mBAAOhB,EAAP,KAAeiB,EAAf,KAWA,OATAC,qBAAU,WACRrC,GACD,GAAE,CAACA,IAGJqC,qBAAU,WACO,cAAX9C,GAAwB6C,EAAU7E,EACvC,GAAE,CAACgC,EAAQhC,IAEG,YAAXgC,EAEA,qBAAKY,UAAU,WAAf,SACE,cAACD,EAAA,EAAD,MAKFZ,EACK,mBAAGa,UAAU,iBAAb,SAA+Bb,IAEnC6B,GAA4B,IAAlBA,EAAOmB,OAIf,cAAC,EAAD,CAAWnB,OAAQA,IAHjB,cAACoB,EAAA,QAAD,GAIV,E,iBCjBcC,MAjBf,WACE,OACE,yBAAQrC,UAAWC,IAAQqC,OAA3B,UACE,qBAAKtC,UAAWC,IAAQsC,KAAxB,0BACA,qBAAKvC,UAAWC,IAAQuC,IAAxB,SACE,+BACE,6BACE,cAAC,IAAD,CAAShC,GAAG,UAAUiC,gBAAiBxC,IAAQyC,OAA/C,0BAEF,6BACE,cAAC,IAAD,CAASlC,GAAG,aAAciC,gBAAiBxC,IAAQyC,OAAnD,gCAMX,E,iBCRcC,MARf,SAAgBtC,GACd,OACE,qCACE,cAAC,EAAD,IACA,uBAAML,UAAWC,IAAQ2C,KAAzB,cAAiCvC,EAAMwC,cAG5C,ECGKC,EAAWC,IAAMC,MAAK,kBAAM,4BAAN,IACtBC,EAAcF,IAAMC,MAAK,kBAAM,4BAAN,IACzBZ,EAAUW,IAAMC,MAAK,kBAAM,uCAAN,IAiCZE,MA7Bf,WAIE,OACE,cAAC,EAAD,UACE,cAAC,WAAD,CAAUC,SAAU,gDAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,IAAD,CAAU7C,GAAG,cAEf,cAAC,IAAD,CAAO4C,KAAK,UAAUC,OAAK,EAA3B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,aAAZ,SACE,cAACN,EAAD,MAEF,cAAC,IAAD,CAAOM,KAAK,mBAAZ,SACE,cAACH,EAAD,MAEF,cAAC,IAAD,CAAOG,KAAK,IAAZ,SACE,cAAC,EAAD,YAMX,ECvCYE,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.6088a0c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__36JCx\",\"logo\":\"MainNavigation_logo__3lT6J\",\"nav\":\"MainNavigation_nav__xdPQn\",\"active\":\"MainNavigation_active__zTMvz\"};","const FIREBASE_DOMAIN = 'https://taskmanager-87909-default-rtdb.firebaseio.com';\r\n\r\nexport async function getAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quotes.');\r\n  }\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  }\r\n\r\n  return transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quote.');\r\n  }\r\n\r\n  const loadedQuote = {\r\n    id: quoteId,\r\n    ...data,\r\n  };\r\n\r\n  return loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not create quote.');\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function addComment(requestData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(requestData.commentData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not add comment.');\r\n  }\r\n\r\n  return data.name ;\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not get comments.');\r\n  }\r\n\r\n  const transformedComments = [];\r\n\r\n  for (const key in data) {\r\n    const commentObj = {\r\n      id: key,\r\n      text:data[key],\r\n    };\r\n\r\n    transformedComments.push(commentObj);\r\n  }\r\n\r\n  return transformedComments;\r\n}\r\n","import { useReducer, useCallback } from \"react\";\r\n\r\nfunction httpReducer(state, action) {\r\n  if (action.type === \"SEND\") {\r\n    return {\r\n      data: null,\r\n      error: null,\r\n      status: \"pending\",\r\n    };\r\n  }\r\n\r\n  if (action.type === \"SUCCESS\") {\r\n    return {\r\n      data: action.responseData,\r\n      error: null,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  if (action.type === \"ERROR\") {\r\n    return {\r\n      data: null,\r\n      error: action.errorMessage,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n  const [httpState, dispatch] = useReducer(httpReducer, {\r\n    status: startWithPending ? \"pending\" : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  const sendRequest = useCallback(\r\n    async function (requestData) {\r\n      dispatch({ type: \"SEND\" });\r\n      //below code will not wait for the state to be updated as triggered by this dispatch() as it is scheduled and will execute immediately\r\n      try {\r\n        const responseData= await requestFunction(requestData);\r\n        dispatch({ type: \"SUCCESS\", responseData });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: \"ERROR\",\r\n          errorMessage: error.message || \"Something went wrong!\",\r\n        });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...httpState,\r\n  };\r\n}\r\n\r\nexport default useHttp;\r\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__v0CsS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1ebQt\",\"sorting\":\"QuoteList_sorting__3W1RO\"};","const NotFound = () => {\r\n    return (\r\n      <div className='centered'>\r\n        <p>No Quotes Found!</p>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default NotFound;\r\n  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2jURY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__H4B9M\"};","import { NavLink } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <NavLink to={`/quotes/${props.id}`}>View Fullscreen</NavLink>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1; //-ve a and b same , +ve then (b,a)\n    }\n  });\n};\n\n//query params->starts with a ? and no effect on router as router will not consider them when parsing the url\nconst QuoteList = (props) => {\n  //will give information about the url we are currently on as key value pairs\n  const location = useLocation();\n  const history = useHistory();\n  console.log(props.quotes);\n  //it will create a object which converts the search key's value string as a key value pair\n  const queryParams = new URLSearchParams(location.search); //browser api\n\n  //way of getting value of a query param out of the object containing all\n  //when we dont pass any query param then the above method will return null and quotes will be arranged in descending order\n  const isAscending = queryParams.get(\"sort\") === \"asc\";\n\n  let sortedQuotes = sortQuotes(props.quotes, isAscending);\n\n  const sortingHandler = () => {\n    history.push(`${location.pathname}?sort=${isAscending ? \"desc\" : \"asc\"}`);\n    //  or\n    //  history.push({\n    //     pathname:location.pathname,\n    //     search:`sort=${isAscending ? 'desc' : 'asc'}`,\n    //   })\n  };\n\n  return (\n    <Fragment>\n      <button onClick={sortingHandler} className=\"btn--flat\">\n        Sort {isAscending ? \"Descending\" : \"Ascending\"}\n      </button>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import QuoteList from \"../components/quotes/QuoteList.js\";\r\nimport { getAllQuotes } from \"../lib/api.js\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport NoQuote from \"./NoQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction AllQuotes() {\r\n  const { sendRequest, status, error, data } = useHttp(getAllQuotes, true);\r\n  const [quotes, setQuotes] = useState([]);\r\n  // sendRequest(); //will cause infinite loop\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n  //if we hadn't wrapped this send request() in usehttp in callback then infinit loop starts\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") setQuotes(data);\r\n  }, [status, data]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focus\">{error}</p>;\r\n  }\r\n  if (!quotes || quotes.length === 0) {\r\n    return <NoQuote />;\r\n  }\r\n\r\n  return <QuoteList quotes={quotes} />;\r\n}\r\nexport default AllQuotes;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./MainNavigation.module.css\";\r\nfunction MainNavigation() {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>All Quotes</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\"  activeClassName={classes.active}>Add Quote</NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\nexport default MainNavigation;\r\n","import MainNavigation from \"./MainNavigation\";\r\nimport classes from \"./Layout.module.css\";\r\nfunction Layout(props) {\r\n  return (\r\n    <>\r\n      <MainNavigation />\r\n      <main className={classes.main}> {props.children}</main>\r\n    </>\r\n  );\r\n}\r\nexport default Layout;\r\n","import React, { Suspense } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport AllQuotes from \"./pages/AllQuotes\";\n// import AddQuote from \"./pages/AddQuote\";\n// import QuoteDetail from \"./pages/QuoteDetail\";\n// import NoQuote from './pages/NoQuote.js';\nimport Layout from \"./components/layout/Layout\";\n\n//Lazy-Loading -> when we send request to server it gave us the whole code bundled in which we might\n// not want some pages or some components (imports) at that moment so we don't download those\n//and only download those when needed using lazy loading as below\n\nconst AddQuote = React.lazy(() => import(\"./pages/AddQuote\"));\nconst QuoteDetail = React.lazy(() => import(\"./pages/QuoteDetail\"));\nconst NoQuote = React.lazy(() => import(\"./pages/NoQuote\"));\n\n//when we are importing conditionally it takes some time that's why suspense is used with a fallback\n\nfunction App() {\n  //exact -> so that to match the exactly same link other wise it will execute for every link which starts wth '/'\n  //switch -> so as to only render one route coz if not switch then all routes whose path is a subset of url will render\n  // with switch only !st route which satisfies the condition will render\n  return (\n    <Layout>\n      <Suspense fallback={<p>loading data...</p>}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\" />\n          </Route>\n          <Route path=\"/quotes\" exact>\n            <AllQuotes />\n          </Route>\n          <Route path=\"/new-quote\">\n            <AddQuote />\n          </Route>\n          <Route path=\"/quotes/:quoteId\">\n            <QuoteDetail />\n          </Route>\n          <Route path=\"*\">\n            <NoQuote />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);//this will activate the router in app components\n"],"sourceRoot":""}